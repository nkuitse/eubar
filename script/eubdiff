#!/usr/bin/perl

use strict;
use warnings;

use Fcntl qw(:mode);
use Getopt::Std;

my (%opt, %path2meta, $rxroot);

getopts('nr:', \%opt);
usage() if @ARGV != 1;

my ($arf) = @ARGV;
$arf =~ s/(\.eum)?$/.eum/;
$rxroot = qr{\Q$opt{'r'}\E(/|$)} if defined $opt{'r'};

# Read in prev archive meta
open my $arfh, '<', $arf or die "Can't open $arf: $!";
while (<$arfh>) {
    s{ $rxroot}{ $1} if $rxroot;
    next if !m{^([-+])([fdlbcps?] [^/.]+) ([./].+)$};
    if ($1 eq '+') {
        $path2meta{$3} = $2;
    }
    elsif ($1 eq '-') {
        delete $path2meta{$3};
    }
}

# Read in output of eubar -m
while (<STDIN>) {
    next if !m{^[+]([fdlbcps?] [^/.]+) ([./].+)$};
    my ($meta_now, $path) = ($1, $2);
    $path =~ s{ $rxroot}{ $1} if $rxroot;
    my $meta = $path2meta{$path};
    print('+', $meta_now, ' ', $path, "\n"), next if !defined $meta;
    next if $meta eq '';
    if ($opt{'n'}) {
        $meta = norm_meta($meta);
        $meta_now = norm_meta($meta_now);
    }
    $path2meta{$path} = '';
    print('+', $meta_now, ' ', $path, "\n") if $meta_now ne $meta;
}
# Delete anything we didn't see in the list of files on stdin
foreach my $path (sort keys %path2meta) {
    my $meta = $path2meta{$path};
    print '-', $meta, ' ', $path, "\n" if $meta ne '';
}

# --- Functions

sub typechar {
    my ($mode) = @_;
    return S_ISREG($mode)  ? 'f' :
           S_ISDIR($mode)  ? 'd' :
           S_ISLNK($mode)  ? 'l' :
           S_ISBLK($mode)  ? 'b' :
           S_ISCHR($mode)  ? 'c' :
           S_ISFIFO($mode) ? 'p' :
           S_ISSOCK($mode) ? 's' : '?';
}

sub norm_meta {
    local $_ = shift;
    s/^([fdlbcps?]) // or die;
    my $typechar = $1;
    my %meta = map { substr($_,0,1) => substr($_,1) } split / /;
    join(' ', $typechar, map { $_ . $meta{$_} } sort keys %meta);
}

sub stat2meta {
    sprintf('%s c%d d%d g%d i%d m%d p%o r%d u%d', typechar($_[2]), @_[10,0,5,1,9,2,6,4]);
}

sub warning {
    print STDERR "eubdiff: ", @_, "\n";
}

