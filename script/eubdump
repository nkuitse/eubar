#!/usr/bin/perl

use strict;
use warnings;

usage() if @ARGV != 1;
my ($f) = @ARGV;
open my $fh, '<', $f or die "Can't open $f: $!";

print <<'EOS';
t fl    prepos  klen       pos      vlen key and val[0..31]
- -- --------- ----- --------- --------- ------------------------------------------------------------------------------
EOS
while (my ($tag, $flags, $key, $vallen) = read_chunk_header($fh)) {
    my $pos = tell $fh;
    my $len = $vallen > 32 ? 32 : $vallen;
    my $val = '';
    if ($len) {
        read $fh, $val, $len or die;
    }
    seek $fh, $vallen - $len, 1 or die "Can't seek: $!";
    my $keylen = length $key;
    printf qq{%s %02x %9d %5d %9d %9d %s \e[32m%s\e[0m\n}, $tag, $flags, $pos-$keylen-8, $keylen, $pos, $vallen, $key, esc($val);
}

sub read_chunk_header {
    my ($fh) = @_;
    my $header;
    my $n = read $fh, $header, 8;
    die "Can't read beginning of the header"
        if !defined $n;
    return if $n == 0;
    my ($tag, $flags, $keylen, $vallen) = unpack('aCnN', $header);
    my $key = '';
    read $fh, $key, $keylen if $keylen;
    return ($tag, $flags, $key, $vallen);
}

sub esc {
    local $_ = shift;
    s/([\x00-\x1f\x5c\x80-\xff])/sprintf "\e[36m\\%03o\e[32m", ord $1/eg;
    return $_;
}

